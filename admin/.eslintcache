[{"/home/user/Company Projects/Project8/react-with-three/admin/src/index.js":"1","/home/user/Company Projects/Project8/react-with-three/admin/src/serviceWorker.js":"2","/home/user/Company Projects/Project8/react-with-three/admin/src/components/App.js":"3","/home/user/Company Projects/Project8/react-with-three/admin/src/context/LayoutContext.js":"4","/home/user/Company Projects/Project8/react-with-three/admin/src/context/UserContext.js":"5","/home/user/Company Projects/Project8/react-with-three/admin/src/themes/index.js":"6","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/forgot password/forgot.js":"7","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/Confirm Password/ConfirmPassword.js":"8","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/ResetPassword/resetpassword.js":"9","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/error/Error.js":"10","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Layout/Layout.js":"11","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/login/Login.js":"12","/home/user/Company Projects/Project8/react-with-three/admin/src/themes/default.js":"13","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/ResetPassword/styles.js":"14","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/login/styles.js":"15","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Layout/styles.js":"16","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/error/styles.js":"17","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/Confirm Password/styles.js":"18","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/forgot password/styles.js":"19","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/charts/Charts.js":"20","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/icons/Icons.js":"21","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/tables/Tables.js":"22","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/typography/Typography.js":"23","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/maps/Maps.js":"24","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Sidebar/Sidebar.js":"25","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/dashboard/Dashboard.js":"26","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/notifications/Notifications.js":"27","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Header/Header.js":"28","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/dashboard/mock.js":"29","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/icons/styles.js":"30","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/charts/components/ApexHeatmap.js":"31","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/charts/components/ApexLineChart.js":"32","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/typography/styles.js":"33","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/maps/styles.js":"34","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/notifications/styles.js":"35","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/dashboard/components/Table/Table.js":"36","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Widget/Widget.js":"37","/home/user/Company Projects/Project8/react-with-three/admin/src/components/PageTitle/PageTitle.js":"38","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/dashboard/components/BigStat/BigStat.js":"39","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Sidebar/components/Dot.js":"40","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Wrappers/Wrappers.js":"41","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Header/styles.js":"42","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Notification/Notification.js":"43","/home/user/Company Projects/Project8/react-with-three/admin/src/components/UserAvatar/UserAvatar.js":"44","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/dashboard/styles.js":"45","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Sidebar/styles.js":"46","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"47","/home/user/Company Projects/Project8/react-with-three/admin/src/components/PageTitle/styles.js":"48","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Widget/styles.js":"49","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/dashboard/components/BigStat/styles.js":"50","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Notification/styles.js":"51","/home/user/Company Projects/Project8/react-with-three/admin/src/components/UserAvatar/styles.js":"52","/home/user/Company Projects/Project8/react-with-three/admin/src/components/Sidebar/components/SidebarLink/styles.js":"53"},{"size":869,"mtime":1679898916327,"results":"54","hashOfConfig":"55"},{"size":4948,"mtime":1679898916331,"results":"56","hashOfConfig":"55"},{"size":2491,"mtime":1679899354534,"results":"57","hashOfConfig":"55"},{"size":1392,"mtime":1679898916327,"results":"58","hashOfConfig":"55"},{"size":2782,"mtime":1679900189691,"results":"59","hashOfConfig":"55"},{"size":502,"mtime":1679898916331,"results":"60","hashOfConfig":"55"},{"size":9051,"mtime":1679902333185,"results":"61","hashOfConfig":"55"},{"size":9775,"mtime":1679899373006,"results":"62","hashOfConfig":"55"},{"size":10902,"mtime":1679906197199,"results":"63","hashOfConfig":"55"},{"size":1571,"mtime":1679898916331,"results":"64","hashOfConfig":"55"},{"size":4457,"mtime":1679899466361,"results":"65","hashOfConfig":"55"},{"size":10223,"mtime":1679906149075,"results":"66","hashOfConfig":"55"},{"size":2987,"mtime":1679898916331,"results":"67","hashOfConfig":"55"},{"size":3336,"mtime":1679898916327,"results":"68","hashOfConfig":"55"},{"size":3133,"mtime":1679898916331,"results":"69","hashOfConfig":"55"},{"size":680,"mtime":1679898916327,"results":"70","hashOfConfig":"55"},{"size":1334,"mtime":1679898916331,"results":"71","hashOfConfig":"55"},{"size":3285,"mtime":1679898916327,"results":"72","hashOfConfig":"55"},{"size":3292,"mtime":1679901776663,"results":"73","hashOfConfig":"55"},{"size":5556,"mtime":1679898916327,"results":"74","hashOfConfig":"55"},{"size":377833,"mtime":1679898916331,"results":"75","hashOfConfig":"55"},{"size":2083,"mtime":1679899546165,"results":"76","hashOfConfig":"55"},{"size":4506,"mtime":1679898916331,"results":"77","hashOfConfig":"55"},{"size":971,"mtime":1679898916331,"results":"78","hashOfConfig":"55"},{"size":4411,"mtime":1679899479805,"results":"79","hashOfConfig":"55"},{"size":15819,"mtime":1679899523169,"results":"80","hashOfConfig":"55"},{"size":13470,"mtime":1679898916331,"results":"81","hashOfConfig":"55"},{"size":10165,"mtime":1679899395562,"results":"82","hashOfConfig":"55"},{"size":4105,"mtime":1679898916327,"results":"83","hashOfConfig":"55"},{"size":780,"mtime":1679898916331,"results":"84","hashOfConfig":"55"},{"size":1794,"mtime":1679898916327,"results":"85","hashOfConfig":"55"},{"size":1328,"mtime":1679898916327,"results":"86","hashOfConfig":"55"},{"size":374,"mtime":1679898916331,"results":"87","hashOfConfig":"55"},{"size":171,"mtime":1679898916331,"results":"88","hashOfConfig":"55"},{"size":1858,"mtime":1679898916331,"results":"89","hashOfConfig":"55"},{"size":1274,"mtime":1679898916327,"results":"90","hashOfConfig":"55"},{"size":2479,"mtime":1679899509793,"results":"91","hashOfConfig":"55"},{"size":427,"mtime":1679898916327,"results":"92","hashOfConfig":"55"},{"size":4039,"mtime":1679898916327,"results":"93","hashOfConfig":"55"},{"size":862,"mtime":1679898916327,"results":"94","hashOfConfig":"55"},{"size":3790,"mtime":1679898916327,"results":"95","hashOfConfig":"55"},{"size":3872,"mtime":1679899411862,"results":"96","hashOfConfig":"55"},{"size":3296,"mtime":1679898916327,"results":"97","hashOfConfig":"55"},{"size":593,"mtime":1679898916327,"results":"98","hashOfConfig":"55"},{"size":2870,"mtime":1679898916327,"results":"99","hashOfConfig":"55"},{"size":1304,"mtime":1679898916327,"results":"100","hashOfConfig":"55"},{"size":4411,"mtime":1679898916327,"results":"101","hashOfConfig":"55"},{"size":462,"mtime":1679898916327,"results":"102","hashOfConfig":"55"},{"size":969,"mtime":1679898916327,"results":"103","hashOfConfig":"55"},{"size":1027,"mtime":1679898916327,"results":"104","hashOfConfig":"55"},{"size":993,"mtime":1679898916327,"results":"105","hashOfConfig":"55"},{"size":276,"mtime":1679898916327,"results":"106","hashOfConfig":"55"},{"size":1412,"mtime":1679898916327,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1spv7sf",{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"/home/user/Company Projects/Project8/react-with-three/admin/src/index.js",[],["220","221"],"/home/user/Company Projects/Project8/react-with-three/admin/src/serviceWorker.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/App.js",["222"],"import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\n// components\nimport Layout from \"./Layout\";\n\n// pages\nimport Error from \"../pages/error\";\nimport Login from \"../pages/login\";\nimport forgot from \"../pages/forgot password/forgot\";\nimport resetpassword from \"../pages/ResetPassword/resetpassword\";\nimport ConfirmPassword from \"../pages/Confirm Password/ConfirmPassword\";\n// context\nimport { useUserState } from \"../context/UserContext\";\n\nexport default function App() {\n  // global\n  var { isAuthenticated } = useUserState();\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/dashboard\" />} />\n        <Route\n          exact\n          path=\"/app\"\n          render={() => <Redirect to=\"/app/dashboard\" />}\n        />\n        <PrivateRoute path=\"/app\" component={Layout} />\n        <PublicRoute path=\"/login\" component={Login} />\n        <PublicRoute path=\"/forgot\" component={forgot} />\n        <PublicRoute path=\"/resetpassword\" component={resetpassword} />\n        <PublicRoute path=\"/ConfirmPassword\" component={ConfirmPassword} />\n        <Route component={Error} />\n      </Switch>\n    </HashRouter>\n  );\n\n  // #######################################################################\n\n  function PrivateRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            React.createElement(component, props)\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\n  function PublicRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            <Redirect\n              to={{\n                pathname: \"/forgot\",\n              }}\n            />\n          ) : (\n            React.createElement(component, props)\n          )\n        }\n      />\n    );\n  }\n  function PublicRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            <Redirect\n              to={{\n                pathname: \"/ConfirmPassword\",\n              }}\n            />\n          ) : (\n            React.createElement(component, props)\n          )\n        }\n      />\n    );\n  }\n}\n","/home/user/Company Projects/Project8/react-with-three/admin/src/context/LayoutContext.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/context/UserContext.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/themes/index.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/forgot password/forgot.js",["223","224","225","226","227","228","229","230","231","232","233","234","235"],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/Confirm Password/ConfirmPassword.js",["236","237"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  // Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  // Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n// import classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\n// import logo from \"./logo.svg\";\n// import google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  // var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"admin@flatlogic.com\");\n  var [passwordValue, setPasswordValue] = useState(\"password\");\n  var [passwordValue1, setPasswordValue1] = useState(\"ConfirmPassword\");\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        {/* <img src={logo} alt=\"logo\" className={classes.logotypeImage} /> */}\n        {/* <Typography className={classes.logotypeText}>\n          Material Admin\n          </Typography> */}\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Confirm Password\" classes={{ root: classes.tab }} />\n            {/* <Tab label=\"New User\" classes={{ root: classes.tab }} /> */}\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              {/* <Typography variant=\"h1\" className={classes.greeting}>\n                Good Morning, User\n              </Typography> */}\n              {/* <Button size=\"large\" className={classes.googleButton}>\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button> */}\n              {/* <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div> */}\n              {/* <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade> */}\n              {/* <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              /> */}\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <TextField\n                id=\"ConfirmPassword\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue1}\n                onChange={e => setPasswordValue1(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Confirm Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons1}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                        passwordValue.length === 0 || passwordValue1.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        passwordValue1,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    \n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                     \n                  >\n                     \n                   Submit\n                  </Button>\n                )}\n                {/* <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.forgetButton}\n                >\n                  Forget Password\n                </Button> */}\n              </div>\n            </React.Fragment>\n          )}\n          {/* {activeTabId === 1 && (\n            <React.Fragment> */}\n              {/* <Typography variant=\"h1\" className={classes.greeting}>\n                Welcome!\n              </Typography>\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={e => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              /> */}\n              {/* <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    disabled={\n                      loginValue.length === 0 ||\n                      passwordValue.length === 0 ||\n                      nameValue.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div> */}\n              {/* <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div> */}\n              {/* <Button\n                size=\"large\"\n                className={classnames(\n                  classes.googleButton,\n                  classes.googleButtonCreating,\n                )}\n              >\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button> */}\n            {/* </React.Fragment>\n          )} */}\n        </div>\n        {/* <Typography color=\"primary\" className={classes.copyright}>\n        © 2014-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://flatlogic.com\" rel=\"noopener noreferrer\" target=\"_blank\">Flatlogic</a>, LLC. All rights reserved.\n        </Typography> */}\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/ResetPassword/resetpassword.js",["238","239","240","241","242","243","244","245"],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/error/Error.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Layout/Layout.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/login/Login.js",["246","247","248","249"],"/home/user/Company Projects/Project8/react-with-three/admin/src/themes/default.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/ResetPassword/styles.js",["250"],"import { red } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotypeContainer: {\n    backgroundColor: theme.palette.primary.main,\n    width: \"60%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeImage: {\n    width: 165,\n    marginBottom: theme.spacing(4),\n  },\n  logotypeText: {\n    color: \"white\",\n    fontWeight: 500,\n    fontSize: 84,\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: 48,\n    },\n  },\n  formContainer: {\n    width: \"40%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n  },\n  form: {\n    width: 320,\n  },\n  tab: {\n    fontWeight: 400,\n    fontSize: 18,\n  },\n  greeting: {\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginTop: theme.spacing(4),\n  },\n  subGreeting: {\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  googleButton: {\n    marginTop: theme.spacing(6),\n    boxShadow: theme.customShadows.widget,\n    backgroundColor: \"white\",\n    width: \"100%\",\n    textTransform: \"none\",\n  },\n  googleButtonCreating: {\n    marginTop: 0,\n  },\n  googleIcon: {\n    width: 30,\n    marginRight: theme.spacing(2),\n  },\n  creatingButtonContainer: {\n    marginTop: theme.spacing(2.5),\n    height: 46,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  createAccountButton: {\n    height: 46,\n    textTransform: \"none\",\n  },\n  formDividerContainer: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  formDividerWord: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  formDivider: {\n    flexGrow: 1,\n    height: 1,\n    backgroundColor: theme.palette.text.hint + \"40\",\n  },\n  errorMessage: {\n    textAlign: \"center\",\n  },\n  textFieldUnderline: {\n    \"&:before\": {\n      borderBottomColor: theme.palette.primary.light,\n    },\n    \"&:after\": {\n      borderBottomColor: theme.palette.primary.main,\n    },\n    \"&:hover:before\": {\n      borderBottomColor: `${theme.palette.primary.light} !important`,\n    },\n  },\n  textField: {\n    borderBottomColor: theme.palette.background.light,\n  },\n  formButtons: {\n    width: \"100%\",\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  formButtons1: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  forgetButton: {\n    textTransform: \"none\",\n    fontWeight: 400,\n  },\n  loginLoader: {\n    marginLeft: theme.spacing(4),\n  },\n  copyright: {\n    marginTop: theme.spacing(4),\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n    },\n  \n  },\n}));\n","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/login/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Layout/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/error/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/Confirm Password/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/forgot password/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/charts/Charts.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/icons/Icons.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/tables/Tables.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/typography/Typography.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/maps/Maps.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Sidebar/Sidebar.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/dashboard/Dashboard.js",["251","252","253","254"],"import React from \"react\";\nimport {\n  Grid,\n  // LinearProgress,\n  // Select,\n  // OutlinedInput,\n  // MenuItem,\n  // Button\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\n// import {\n//   ResponsiveContainer,\n//   ComposedChart,\n//   AreaChart,\n//   LineChart,\n//   Line,\n//   Area,\n//   PieChart,\n//   Pie,\n//   Cell,\n//   YAxis,\n//   XAxis,\n// } from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\n// import mock from \"./mock\";\n// import Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\n// import { Typography } from \"../../components/Wrappers\";\n// import Dot from \"../../components/Sidebar/components/Dot\";\n// import Table from \"./components/Table/Table\";\n// import BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  // var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      {/* <PageTitle title=\"Dashboard\" button={<Button\n      variant=\"contained\"\n      size=\"medium\"\n      color=\"secondary\"\n    >\n        Latest Reports\n    </Button>} /> */}\n    <PageTitle title=\"Dashboard\"/>\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          {/* <Widget\n            title=\"Visits Today\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\n                12, 678\n              </Typography>\n                </Grid>\n                <Grid item xs={6}>\n              <LineChart\n                width={100}\n                height={30}\n                data={[\n                  { value: 10 },\n                  { value: 15 },\n                  { value: 10 },\n                  { value: 17 },\n                  { value: 18 },\n                ]}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.success.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Registrations\n                </Typography>\n                <Typography size=\"md\">860</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Sign Out\n                </Typography>\n                <Typography size=\"md\">32</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Rate\n                </Typography>\n                <Typography size=\"md\">3.25%</Typography>\n              </Grid>\n            </Grid>\n          </Widget> */}\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          {/* <Widget\n            title=\"App Performance\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Integration\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  SDK\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Integration\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={77}\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                SDK\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={73}\n                classes={{ barColorPrimary: classes.progressBarWarning }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget> */}\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          {/* <Widget\n            title=\"Server Overview\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                60% / 37°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.secondary.main}\n                      fill={theme.palette.secondary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                54% / 31°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.primary.main}\n                      fill={theme.palette.primary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                57% / 21°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.warning.main}\n                      fill={theme.palette.warning.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Widget> */}\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          {/* <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={30}\n                      outerRadius={40}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget> */}\n        </Grid>\n        <Grid item xs={12}>\n          {/* <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Daily Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"secondary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget> */}\n        </Grid>\n        {/* {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))} */}\n        <Grid item xs={12}>\n          {/* <Widget\n            title=\"Support Requests\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget> */}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","/home/user/Company Projects/Project8/react-with-three/admin/src/pages/notifications/Notifications.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Header/Header.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/dashboard/mock.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/icons/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/charts/components/ApexHeatmap.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/charts/components/ApexLineChart.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/typography/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/maps/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/notifications/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/dashboard/components/Table/Table.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Widget/Widget.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/PageTitle/PageTitle.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/dashboard/components/BigStat/BigStat.js",[],["255","256"],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Sidebar/components/Dot.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Wrappers/Wrappers.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Header/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Notification/Notification.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/UserAvatar/UserAvatar.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/dashboard/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Sidebar/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/PageTitle/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Widget/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/pages/dashboard/components/BigStat/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Notification/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/UserAvatar/styles.js",[],"/home/user/Company Projects/Project8/react-with-three/admin/src/components/Sidebar/components/SidebarLink/styles.js",[],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":81,"column":12,"nodeType":"263","messageId":"264","endLine":81,"endColumn":23},{"ruleId":"265","severity":1,"message":"266","line":5,"column":3,"nodeType":"263","messageId":"267","endLine":5,"endColumn":13},{"ruleId":"265","severity":1,"message":"268","line":10,"column":3,"nodeType":"263","messageId":"267","endLine":10,"endColumn":7},{"ruleId":"265","severity":1,"message":"269","line":14,"column":8,"nodeType":"263","messageId":"267","endLine":14,"endColumn":18},{"ruleId":"265","severity":1,"message":"270","line":20,"column":8,"nodeType":"263","messageId":"267","endLine":20,"endColumn":12},{"ruleId":"265","severity":1,"message":"271","line":21,"column":8,"nodeType":"263","messageId":"267","endLine":21,"endColumn":14},{"ruleId":"265","severity":1,"message":"272","line":24,"column":27,"nodeType":"263","messageId":"267","endLine":24,"endColumn":36},{"ruleId":"265","severity":1,"message":"273","line":30,"column":7,"nodeType":"263","messageId":"267","endLine":30,"endColumn":19},{"ruleId":"265","severity":1,"message":"274","line":33,"column":19,"nodeType":"263","messageId":"267","endLine":33,"endColumn":31},{"ruleId":"265","severity":1,"message":"275","line":34,"column":8,"nodeType":"263","messageId":"267","endLine":34,"endColumn":13},{"ruleId":"265","severity":1,"message":"276","line":34,"column":15,"nodeType":"263","messageId":"267","endLine":34,"endColumn":23},{"ruleId":"265","severity":1,"message":"277","line":36,"column":8,"nodeType":"263","messageId":"267","endLine":36,"endColumn":17},{"ruleId":"265","severity":1,"message":"278","line":36,"column":19,"nodeType":"263","messageId":"267","endLine":36,"endColumn":31},{"ruleId":"265","severity":1,"message":"279","line":38,"column":23,"nodeType":"263","messageId":"267","endLine":38,"endColumn":39},{"ruleId":"265","severity":1,"message":"275","line":33,"column":8,"nodeType":"263","messageId":"267","endLine":33,"endColumn":13},{"ruleId":"265","severity":1,"message":"280","line":36,"column":20,"nodeType":"263","messageId":"267","endLine":36,"endColumn":33},{"ruleId":"265","severity":1,"message":"266","line":5,"column":3,"nodeType":"263","messageId":"267","endLine":5,"endColumn":13},{"ruleId":"265","severity":1,"message":"268","line":10,"column":3,"nodeType":"263","messageId":"267","endLine":10,"endColumn":7},{"ruleId":"265","severity":1,"message":"269","line":13,"column":8,"nodeType":"263","messageId":"267","endLine":13,"endColumn":18},{"ruleId":"265","severity":1,"message":"271","line":20,"column":8,"nodeType":"263","messageId":"267","endLine":20,"endColumn":14},{"ruleId":"265","severity":1,"message":"275","line":33,"column":8,"nodeType":"263","messageId":"267","endLine":33,"endColumn":13},{"ruleId":"265","severity":1,"message":"277","line":35,"column":8,"nodeType":"263","messageId":"267","endLine":35,"endColumn":17},{"ruleId":"265","severity":1,"message":"278","line":35,"column":19,"nodeType":"263","messageId":"267","endLine":35,"endColumn":31},{"ruleId":"265","severity":1,"message":"280","line":36,"column":20,"nodeType":"263","messageId":"267","endLine":36,"endColumn":33},{"ruleId":"281","severity":1,"message":"282","line":41,"column":15,"nodeType":"283","messageId":"284","endLine":41,"endColumn":17},{"ruleId":"285","severity":1,"message":"286","line":56,"column":29,"nodeType":"287","messageId":"288","endLine":56,"endColumn":30,"suggestions":"289"},{"ruleId":"285","severity":1,"message":"286","line":56,"column":45,"nodeType":"287","messageId":"288","endLine":56,"endColumn":46,"suggestions":"290"},{"ruleId":"281","severity":1,"message":"282","line":91,"column":16,"nodeType":"283","messageId":"284","endLine":91,"endColumn":18},{"ruleId":"265","severity":1,"message":"291","line":1,"column":10,"nodeType":"263","messageId":"267","endLine":1,"endColumn":13},{"ruleId":"265","severity":1,"message":"292","line":37,"column":7,"nodeType":"263","messageId":"267","endLine":37,"endColumn":20},{"ruleId":"265","severity":1,"message":"293","line":38,"column":7,"nodeType":"263","messageId":"267","endLine":38,"endColumn":19},{"ruleId":"265","severity":1,"message":"294","line":46,"column":7,"nodeType":"263","messageId":"267","endLine":46,"endColumn":14},{"ruleId":"265","severity":1,"message":"295","line":47,"column":7,"nodeType":"263","messageId":"267","endLine":47,"endColumn":12},{"ruleId":"257","replacedBy":"296"},{"ruleId":"259","replacedBy":"297"},"no-native-reassign",["298"],"no-negated-in-lhs",["299"],"no-redeclare","'PublicRoute' is already defined.","Identifier","redeclared","no-unused-vars","'Typography' is defined but never used.","unusedVar","'Fade' is defined but never used.","'classnames' is defined but never used.","'logo' is defined but never used.","'google' is defined but never used.","'loginUser' is defined but never used.","'userDispatch' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'nameValue' is assigned a value but never used.","'setNameValue' is assigned a value but never used.","'setPasswordValue' is assigned a value but never used.","'setLoginValue' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["300","301"],["302","303"],"'red' is defined but never used.","'mainChartData' is assigned a value but never used.","'PieChartData' is assigned a value but never used.","'classes' is assigned a value but never used.","'theme' is assigned a value but never used.",["298"],["299"],"no-global-assign","no-unsafe-negation",{"messageId":"304","fix":"305","desc":"306"},{"messageId":"307","fix":"308","desc":"309"},{"messageId":"304","fix":"310","desc":"306"},{"messageId":"307","fix":"311","desc":"309"},"removeEscape",{"range":"312","text":"313"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"314","text":"315"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"316","text":"313"},{"range":"317","text":"315"},[1702,1703],"",[1702,1702],"\\",[1718,1719],[1718,1718]]